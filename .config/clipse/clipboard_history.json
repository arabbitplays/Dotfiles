{"clipboardHistory":[{"value":"config config --local status.showUntrackedFiles no","recorded":"2025-06-20 10:32:43.026033832","filePath":"null","pinned":false},{"value":"alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'","recorded":"2025-06-20 10:31:58.802413201","filePath":"null","pinned":false},{"value":"git init --bare $HOME/.cfg","recorded":"2025-06-20 10:31:06.351462133","filePath":"null","pinned":false},{"value":"102162","recorded":"2025-06-20 09:55:42.292315634","filePath":"null","pinned":false},{"value":"GLVQ9L","recorded":"2025-06-20 09:31:41.812042968","filePath":"null","pinned":false},{"value":"$mainMod SHIFT","recorded":"2025-06-19 14:15:46.639801647","filePath":"null","pinned":false},{"value":"movefocus","recorded":"2025-06-19 14:13:15.476447947","filePath":"null","pinned":false},{"value":"SUPER_SHIFT","recorded":"2025-06-19 14:13:01.034907977","filePath":"null","pinned":false},{"value":"bind = $mainMod, left, movewindow, l\nbind = $mainMod, right, movewindow, r\nbind = $mainMod, up, movewindow, u\nbind = $mainMod, down, movewindow, d","recorded":"2025-06-19 14:11:45.797587558","filePath":"null","pinned":false},{"value":"{\n  description = \"A Nix-flake-based development environment\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/nixos-25.05\";\n  };\n\n  outputs = { self , nixpkgs ,... }: let\n    # system should match the system you are running on\n    system = \"x86_64-linux\";\n  in {\n    devShells.\"${system}\".default = let\n      pkgs = import nixpkgs {\n        inherit system;\n      };\n    in pkgs.mkShell {\n      packages = with pkgs; [\n        cmake\n        ninja\n        glslang # or shaderc\n      ];\n\n      buildInputs = with pkgs; [\n        mesa # open gl\n        libGL # compatibility\n        libGLU\n        pkg-config # helps cmake find dlibs\n        glfw\n        xorg.libX11\n        xorg.libXext        \n        xorg.libXrandr      \n        xorg.libXcursor     \n        xorg.libXrender     \n        xorg.libXi  \n        xorg.libXinerama \n      ];\n\n      shellHook = ''\n        echo \"Entered dev env\"\n        export LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";\n      '';\n    };\n  };\n}","recorded":"2025-06-19 13:21:48.761920549","filePath":"null","pinned":false},{"value":"git push --set-upstream origin Assignment3","recorded":"2025-06-19 13:19:23.342313730","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/framework/data\n/home/oschdi/Downloads/framework/glf\n/home/oschdi/Downloads/framework/CMakeLists.txt","recorded":"2025-06-19 13:17:41.948099055","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Realtime-Computergraphics/Assignment3","recorded":"2025-06-19 13:09:19.387635025","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/Assignment3","recorded":"2025-06-19 13:08:56.094760481","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/flake.nix","recorded":"2025-06-19 13:03:46.439135450","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Realtime-Computergraphics/flake.nix","recorded":"2025-06-19 13:02:58.144738438","filePath":"null","pinned":false},{"value":"git reset --hard HEAD","recorded":"2025-06-19 13:02:32.096408251","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Vulkan-Raytracing/flake.nix","recorded":"2025-06-19 13:01:20.521455638","filePath":"null","pinned":false},{"value":"\tint err=0;\n\tchar msg[256];\n\twhile( (err=glGetError())!=0 )\n\t{\n\t\tsprintf(msg, \"GL_ERROR=0x%x\\n\", err);\n\t\t#ifdef ANT_WINDOWS\n\t\t\tOutputDebugString(msg);\n\t\t#endif\n\t\tfprintf(stderr, msg);\n\t}","recorded":"2025-06-19 13:00:04.471349433","filePath":"null","pinned":false},{"value":"CMake Error at glf/CMakeLists.txt:32 (target_link_libraries):\n  Target \"GLF\" links to:\n\n    OpenGL::GLU","recorded":"2025-06-19 12:56:16.705116683","filePath":"null","pinned":false},{"value":"xorg.libXinerama","recorded":"2025-06-19 12:54:48.853222901","filePath":"null","pinned":false},{"value":"Xinerama","recorded":"2025-06-19 12:54:25.938452240","filePath":"null","pinned":false},{"value":"    pkgs.xorg.libXext        # sometimes needed\n    pkgs.xorg.libXrandr      # for window resizing (optional)\n    pkgs.xorg.libXcursor     # optional: cursor support\n    pkgs.xorg.libXrender     # optional: rendering\n    pkgs.xorg.libXi   ","recorded":"2025-06-19 12:49:01.911423700","filePath":"null","pinned":false},{"value":"Could NOT find X11 (missing: X11_X11_INCLUDE_PATH X11_X11_LIB)","recorded":"2025-06-19 12:45:17.047037558","filePath":"null","pinned":false},{"value":"pkgs.pkg-config","recorded":"2025-06-19 12:43:26.463049536","filePath":"null","pinned":false},{"value":"ould NOT find OpenGL (missing: OPENGL_opengl_LIBRARY OPENGL_glx_LIBRARY\n  OPENGL_INCLUDE_DIR)","recorded":"2025-06-19 12:42:48.912937152","filePath":"null","pinned":false},{"value":"      LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";\n","recorded":"2025-06-19 12:41:35.031705050","filePath":"null","pinned":false},{"value":"LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";","recorded":"2025-06-19 12:40:26.471221576","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/framework/Assignments\n/home/oschdi/Downloads/framework/data\n/home/oschdi/Downloads/framework/glf\n/home/oschdi/Downloads/framework/CMakeLists.txt","recorded":"2025-06-18 17:38:17.601107424","filePath":"null","pinned":false},{"value":"git@github.com:arabbitplays/Realtime-Computergraphics.git","recorded":"2025-06-18 17:28:55.620193000","filePath":"null","pinned":false},{"value":"kitty --class clipse -e clipse","recorded":"2025-06-18 16:43:11.995052062","filePath":"null","pinned":false},{"value":"working","recorded":"2025-06-18 16:42:55.957823663","filePath":"null","pinned":false},{"value":"Diversity management","recorded":"2025-06-18 16:42:45.708735404","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Requirements: wl-clipboard, wtype\n\n# Save current clipboard\nOLD_CLIP=$(wl-paste)\n\n# Launch Clipse and wait for it to exit\nclipse\n\n# Give it a short moment to update clipboard\nsleep 0.3\n\n# Get the new clipboard content\nNEW_CLIP=$(wl-paste)\n\n# Compare and type if changed\nif [[ \"$NEW_CLIP\" != \"$OLD_CLIP\" \u0026\u0026 -n \"$NEW_CLIP\" ]]; then\n    wtype --delay 5 \"$NEW_CLIP\"\nfi\n","recorded":"2025-06-18 16:42:01.242758885","filePath":"null","pinned":false},{"value":"scrutinized","recorded":"2025-06-18 16:27:31.467932178","filePath":"null","pinned":false},{"value":"performative diversity","recorded":"2025-06-18 16:27:05.255197383","filePath":"null","pinned":false},{"value":"t√™tu‚Ä¢connec","recorded":"2025-06-18 13:08:47.626898550","filePath":"null","pinned":false},{"value":"session","recorded":"2025-06-18 13:01:36.546591932","filePath":"null","pinned":false},{"value":"everywhere, ‚Äûwo sich Menschen im Dialog begegnen‚Äú (p. 4), so also in working life, in social contexts or through media. ","recorded":"2025-06-18 10:09:13.137843606","filePath":"null","pinned":false},{"value":" I view this ","recorded":"2025-06-18 10:02:21.954159003","filePath":"null","pinned":false},{"value":"While the concept of diversity is widely accepted today, its implementation in companies often remains superficial, limited to symbolic gestures like a ‚Äúrainbow flag in the company logo‚Äù, instead of being embedded in systemic change","recorded":"2025-06-18 09:47:46.933684033","filePath":"null","pinned":false},{"value":"movewindow","recorded":"2025-06-17 19:25:19.408110393","filePath":"null","pinned":false},{"value":"bind = $mainMod, left, movewindow, l\n","recorded":"2025-06-17 19:25:13.008099210","filePath":"null","pinned":false},{"value":"monitor=eDP-1,preferred,auto,1\n","recorded":"2025-06-17 19:05:57.084329490","filePath":"null","pinned":false},{"value":"monitor=l,preferred,auto,1\n","recorded":"2025-06-17 18:59:09.880091557","filePath":"null","pinned":false},{"value":"monitor = DP-1, 1920x1080, 1920x0, 1\nmonitor = DP-2, 1920x1080, 0x0, 1","recorded":"2025-06-17 18:56:59.400834485","filePath":"null","pinned":false},{"value":"# See https://wiki.hyprland.org/Configuring/Monitors/\n","recorded":"2025-06-17 18:56:05.256638228","filePath":"null","pinned":false},{"value":"https://www.raileurope.com/de/journey/hamburg-stockholm-1v0ktjg?currency=EUR\u0026outbound=c843c6-ad56cb\u0026leg=outbound","recorded":"2025-06-17 18:22:57.839749833","filePath":"null","pinned":false},{"value":"üì∑ 1199347-057359601.png","recorded":"2025-06-17 17:36:15.578710919","filePath":"/home/oschdi/.config/clipse/tmp_files/1199347-057359601.png","pinned":false},{"value":"https://meet.jit.si/CompetentAgendasStrengthenInitially","recorded":"2025-06-17 17:29:45.091434617","filePath":"null","pinned":false},{"value":"31.","recorded":"2025-06-17 16:33:00.611270420","filePath":"null","pinned":false},{"value":"M√ºnster","recorded":"2025-06-17 16:27:44.708149048","filePath":"null","pinned":false},{"value":"30.","recorded":"2025-06-17 16:27:37.457205033","filePath":"null","pinned":false},{"value":"29.","recorded":"2025-06-17 16:27:29.620948683","filePath":"null","pinned":false},{"value":"Hamburg","recorded":"2025-06-17 16:26:38.804469880","filePath":"null","pinned":false},{"value":"Stockholm","recorded":"2025-06-17 16:26:20.423135226","filePath":"null","pinned":false},{"value":"swww-daemon \u0026\n~/.config/hypr/swww-rotating.sh \u0026","recorded":"2025-06-17 16:11:39.253891783","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/wp1987762-nier-automata-wallpapers.jpg\n/home/oschdi/Downloads/720460.jpg\n/home/oschdi/Downloads/796358.jpg\n/home/oschdi/Downloads/873979.jpg\n/home/oschdi/Downloads/1362666.png\n/home/oschdi/Downloads/916448.jpg\n/home/oschdi/Downloads/destiny-2-shadowkeep-scarlet-keep-hd-f2u8lhbybo3n0rjf.webp","recorded":"2025-06-17 16:10:21.254701630","filePath":"null","pinned":false},{"value":"$HOME","recorded":"2025-06-17 16:05:00.605162197","filePath":"null","pinned":false},{"value":"~/.config/hypr/Wallpapers/*","recorded":"2025-06-17 16:03:27.685808187","filePath":"null","pinned":false},{"value":"source ~/.config/hypr/swww-rotating.sh \u0026\n","recorded":"2025-06-17 15:59:35.268624158","filePath":"null","pinned":false},{"value":"--transition-pos","recorded":"2025-06-17 15:43:52.215249648","filePath":"null","pinned":false},{"value":"--transition-type center","recorded":"2025-06-17 15:41:40.799400648","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Set the path to the wallpapers directory\nwallpapersDir=\"$HOME/Pictures/wallpapers\"\n\n# Get a list of all image files in the wallpapers directory\nwallpapers=(\"$wallpapersDir\"/*)\n\n# Start an infinite loop\nwhile true; do\n    # Check if the wallpapers array is empty\n    if [ ${#wallpapers[@]} -eq 0 ]; then\n        # If the array is empty, refill it with the image files\n        wallpapers=(\"$wallpapersDir\"/*)\n    fi\n\n    # Select a random wallpaper from the array\n    wallpaperIndex=$(( RANDOM % ${#wallpapers[@]} ))\n    selectedWallpaper=\"${wallpapers[$wallpaperIndex]}\"\n\n    # Update the wallpaper using the swww img command\n    swww img \"$selectedWallpaper\"\n\n    # Remove the selected wallpaper from the array\n    unset \"wallpapers[$wallpaperIndex]\"\n\n    # Delay for 2 hours before selecting the next wallpaper\n    sleep 2h\ndone","recorded":"2025-06-17 15:33:34.694623970","filePath":"null","pinned":false},{"value":"/home/oschdi/Resources/Nixos-System/dev/merian_flake.nix","recorded":"2025-06-17 15:20:38.731891776","filePath":"null","pinned":false},{"value":"git@github.com:LDAP/merian-shadertoy.git","recorded":"2025-06-17 15:19:40.324086918","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/merian-shadertoy/flake.nix","recorded":"2025-06-17 15:17:34.374733288","filePath":"null","pinned":false},{"value":"hyprsysteminfo","recorded":"2025-06-17 15:13:01.059676282","filePath":"null","pinned":false},{"value":"/home/oschdi/Resources/Nixos-System/dev/flake.nix","recorded":"2025-06-17 15:06:03.706903956","filePath":"null","pinned":false},{"value":"        python3\n","recorded":"2025-06-17 14:53:37.584418037","filePath":"null","pinned":false},{"value":"        ninja\n","recorded":"2025-06-17 14:53:27.844170312","filePath":"null","pinned":false},{"value":"git@github.com:arabbitplays/Vulkan-Raytracing.git","recorded":"2025-06-17 14:50:12.354551982","filePath":"null","pinned":false},{"value":"        stb\n","recorded":"2025-06-17 14:39:11.162788360","filePath":"null","pinned":false},{"value":"        doxygen\n","recorded":"2025-06-17 14:38:28.321431508","filePath":"null","pinned":false},{"value":"        pkg-config\n","recorded":"2025-06-17 14:38:21.269400424","filePath":"null","pinned":false},{"value":"        doxygen\n        pkg-config","recorded":"2025-06-17 14:38:05.363413156","filePath":"null","pinned":false},{"value":"        xorg.libXrandr\n        xorg.libXinerama\n        xorg.libXcursor\n        xorg.libXi","recorded":"2025-06-17 14:37:37.765032704","filePath":"null","pinned":false},{"value":"        xorg.libX11\n","recorded":"2025-06-17 14:37:10.403521848","filePath":"null","pinned":false},{"value":"        wayland-scanner\n        libxkbcommon","recorded":"2025-06-17 14:36:45.961943321","filePath":"null","pinned":false},{"value":"waylandpp","recorded":"2025-06-17 12:44:30.855320164","filePath":"null","pinned":false},{"value":"pkg-config","recorded":"2025-06-17 12:42:02.616912792","filePath":"null","pinned":false},{"value":"        \n","recorded":"2025-06-17 12:41:42.625592600","filePath":"null","pinned":false},{"value":"rPackages.pkgconfig","recorded":"2025-06-17 12:40:55.310369247","filePath":"null","pinned":false},{"value":"PkgConfig","recorded":"2025-06-17 12:40:35.185173905","filePath":"null","pinned":false},{"value":"doxygen","recorded":"2025-06-17 12:39:45.092407053","filePath":"null","pinned":false},{"value":"Doxygen","recorded":"2025-06-17 12:39:36.237472426","filePath":"null","pinned":false},{"value":"        xorg.libXcursor\n","recorded":"2025-06-17 12:38:45.494150521","filePath":"null","pinned":false},{"value":"libX11","recorded":"2025-06-17 12:38:12.058393606","filePath":"null","pinned":false},{"value":"libXinerama","recorded":"2025-06-17 12:36:10.379376957","filePath":"null","pinned":false},{"value":"libxinerama","recorded":"2025-06-17 12:35:56.348915993","filePath":"null","pinned":false},{"value":"libXrandr","recorded":"2025-06-17 12:35:00.499189886","filePath":"null","pinned":false},{"value":"xorg.xrandr","recorded":"2025-06-17 12:33:12.255775863","filePath":"null","pinned":false},{"value":"    xorg.libX11.dev","recorded":"2025-06-17 12:29:42.251033820","filePath":"null","pinned":false},{"value":"X.Org X Window System development libraries","recorded":"2025-06-17 12:26:17.141772664","filePath":"null","pinned":false},{"value":"libxkbcommon","recorded":"2025-06-17 12:24:13.141328294","filePath":"null","pinned":false},{"value":"    glslang # or shaderc\n    vulkan-headers\n    vulkan-loader","recorded":"2025-06-17 12:18:45.604028992","filePath":"null","pinned":false},{"value":"vulkan-validation-layers","recorded":"2025-06-17 12:17:57.475464884","filePath":"null","pinned":false},{"value":"x86_64-linux\"","recorded":"2025-06-17 12:14:02.060973870","filePath":"null","pinned":false},{"value":"{\n  description = \"A Nix-flake-based Node.js development environment\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/nixos-25.05\";\n  };\n\n  outputs = { self , nixpkgs ,... }: let\n    # system should match the system you are running on\n    # system = \"x86_64-linux\";\n    system = \"x86_64-darwin\";\n  in {\n    devShells.\"${system}\".default = let\n      pkgs = import nixpkgs {\n        inherit system;\n      };\n    in pkgs.mkShell {\n      # create an environment with nodejs_18, pnpm, and yarn\n      packages = with pkgs; [\n        nodejs_18\n        nodePackages.pnpm\n        (yarn.override { nodejs = nodejs_18; })\n      ];\n\n      shellHook = ''\n        echo \"node `node --version`\"\n      '';\n    };\n  };\n}","recorded":"2025-06-17 12:11:25.420717397","filePath":"null","pinned":false},{"value":"Parallelism: Flynn's Taxonomy (1966)Parallelism: Flynn's Taxonomy (1966)\nSISD\nSingle instruction, single data\nScalar processor\nSIMD\nSingle instruction, multiple data\nSSE/AVX, what Intel was pushing for CPU\nMIMD\nmultiple instructions, multiple data\nSIMT\nSingle instruction, multiple threads\nNVIDIA marketing word\nSPMD\nSingle program, multiple data\ncan include SIMD\nmultiple cooperating processors","recorded":"2025-06-17 11:55:56.804033109","filePath":"null","pinned":false}]}
{"clipboardHistory":[{"value":"xdg-utils","recorded":"2025-06-30 11:47:45.311177615","filePath":"null","pinned":false},{"value":"cursor_shape_unfocused","recorded":"2025-06-30 11:42:42.854891539","filePath":"null","pinned":false},{"value":"vMFLobes[int(gl_FragCoord.x + gl_FragCoord.y * width)]","recorded":"2025-06-29 17:59:07.548479462","filePath":"null","pinned":false},{"value":"        lobe.color = (lobe.color * lobe.sample_count + contrib / samplesPerPixel) / (lobe.sample_count + 1);\n        lobe.sample_count++;","recorded":"2025-06-29 17:53:48.927224950","filePath":"null","pinned":false},{"value":"contrib / samplesPerPixel","recorded":"2025-06-29 17:42:37.972855027","filePath":"null","pinned":false},{"value":"https://badgirlsbible.com/pet-names-for-guys","recorded":"2025-06-29 16:11:58.486451116","filePath":"null","pinned":false},{"value":"gerne auch mit Knebel\n","recorded":"2025-06-29 15:48:25.872959849","filePath":"null","pinned":false},{"value":"https://www.theduchy.com/bikini-harness/","recorded":"2025-06-29 15:47:17.801491818","filePath":"null","pinned":false},{"value":"https://spicesoflust.com/submissive-positions/","recorded":"2025-06-29 15:46:45.172871389","filePath":"null","pinned":false},{"value":"alias config=\"git --git-dir=$HOME/.cfg/ --work-tree=$HOME\"\n","recorded":"2025-06-27 13:58:11.432103628","filePath":"null","pinned":false},{"value":"config=\"git --git-dir=$HOME/.cfg/ --work-tree=$HOME\"","recorded":"2025-06-27 13:57:39.255578411","filePath":"null","pinned":false},{"value":"echo \"Sync Obsidian Repositories\"\necho \"--------------------------\"","recorded":"2025-06-27 13:55:03.847344379","filePath":"null","pinned":false},{"value":"eval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_rsa   # or your specific key path\n","recorded":"2025-06-27 13:52:36.069352179","filePath":"null","pinned":false},{"value":"git pull\ngit add .\ngit commit -a -m \"sync $now\"\ngit push","recorded":"2025-06-27 13:50:10.478432110","filePath":"null","pinned":false},{"value":"📷 23318-831683933.png","recorded":"2025-06-27 13:39:34.836984081","filePath":"/home/oschdi/.config/clipse/tmp_files/23318-831683933.png","pinned":false},{"value":"Use exponential moving average to update statistics in the next frame.","recorded":"2025-06-27 13:33:50.782148221","filePath":"null","pinned":false},{"value":"📷 99627-294726757.png","recorded":"2025-06-27 11:57:09.319486175","filePath":"/home/oschdi/.config/clipse/tmp_files/99627-294726757.png","pinned":false},{"value":"- the consumer has the possibility to deploy self-created or acquired applications onto the infrastructure\n\t- they can be created using programming languages, libraries and tools supported by the provider\n- the consumer can not manage or control the underlying infrastructure, network, server or operating system","recorded":"2025-06-27 11:44:02.411277185","filePath":"null","pinned":false},{"value":"#!/usr/bin/env python3\n\n# let's say you have a C++ project in Nix that you want to work on with CLion so that the Nix dependencies are available\n# put this script in your project directory\n# then, in Settings -\u003e Build, Execution, Deployment -\u003e Toolchains set CMake to this script\n# if you need any extra nix-shell arguments, add them to the invocation at the bottom\n\nimport os\nimport sys\nimport shlex\nimport subprocess\n\nscriptDir = os.path.dirname(os.path.realpath(__file__))\n\nargs = list(map(shlex.quote, sys.argv[1:]))\n\n# Use the cmakeFlags set by Nix - this doesn't work with --build\nif \"--build\" not in args:\n  args.insert(0, \"$cmakeFlags\")\n\ncwd = os.getcwd()\ncmake_cmd = f\"cd {shlex.quote(cwd)} \u0026\u0026 cmake {' '.join(args)}\"\n\n# Run the command using `nix develop` in a clean environment\n# Assumes the flake is in or above the scriptDir\nsubprocess.run([\n  \"nix\",\n  \"develop\",\n  \"--impure\",           # Allow access to env vars like $cmakeFlags\n  \"--command\",\n  \"bash\", \"-c\", cmake_cmd\n], cwd=scriptDir)","recorded":"2025-06-25 17:46:03.355984461","filePath":"null","pinned":false},{"value":"cwd = os.getcwd()\ncmake_cmd = f\"cd {shlex.quote(cwd)} \u0026\u0026 cmake {' '.join(args)}\"\n\n# Run the command using `nix develop` in a clean environment\n# Assumes the flake is in or above the scriptDir\nsubprocess.run([\n    \"nix\",\n    \"develop\",\n    \"--impure\",           # Allow access to env vars like $cmakeFlags\n    \"--command\",\n    \"bash\", \"-c\", cmake_cmd\n], cwd=scriptDir)","recorded":"2025-06-25 17:43:14.928238921","filePath":"null","pinned":false},{"value":"subprocess.run([\n    \"nix\",\n    \"develop\",\n    \"--impure\",           # Allow access to env vars like $cmakeFlags\n    \"--command\",\n    \"bash\", \"-c\", cmake_cmd\n], cwd=scriptDir)","recorded":"2025-06-25 17:42:41.293231485","filePath":"null","pinned":false},{"value":"import subprocess","recorded":"2025-06-25 17:42:20.873155379","filePath":"null","pinned":false},{"value":"scriptDir = os.path.dirname(os.path.realpath(__file__))\n\nargs = list(map(shlex.quote, sys.argv[1:]))\n\n# Use the cmakeFlags set by Nix - this doesn't work with --build\nif \"--build\" not in args:\n  args.insert(0, \"$cmakeFlags\")\n\ncwd = os.getcwd()\ncmd = 'cd ' + cwd + ' \u0026\u0026 cmake ' + ' '.join(args)\n\nos.chdir(scriptDir)\nos.execvp(\"nix-shell\", [\n  'nix-shell',\n  '--pure',\n  '--run', cmd\n  ])","recorded":"2025-06-25 17:40:17.968675136","filePath":"null","pinned":false},{"value":"#!/usr/bin/env python3\n\n# let's say you have a C++ project in Nix that you want to work on with CLion so that the Nix dependencies are available\n# put this script in your project directory\n# then, in Settings -\u003e Build, Execution, Deployment -\u003e Toolchains set CMake to this script\n# if you need any extra nix-shell arguments, add them to the invocation at the bottom\n\nimport os\nimport sys\nimport shlex\n\nscriptDir = os.path.dirname(os.path.realpath(__file__))\n\nargs = list(map(shlex.quote, sys.argv[1:]))\n\n# Use the cmakeFlags set by Nix - this doesn't work with --build\nif \"--build\" not in args:\n  args.insert(0, \"$cmakeFlags\")\n\ncwd = os.getcwd()\ncmd = 'cd ' + cwd + ' \u0026\u0026 cmake ' + ' '.join(args)\n\nos.chdir(scriptDir)\nos.execvp(\"nix-shell\", [\n  'nix-shell',\n  '--pure',\n  '--run', cmd\n  ])","recorded":"2025-06-25 17:35:30.199422507","filePath":"null","pinned":false},{"value":"\nSkip to content\nSearch Gists\nAll gists\nBack to GitHub\n@chpatrick\nchpatrick/nix-cmake\nCreated September 15, 2018 13:38 • Report abuse\n\nCode\nRevisions 1\nStars 18\nForks 3\nClone this repository at \u0026lt;script src=\u0026quot;https://gist.github.com/chpatrick/61a5d486dd0d806bdf07e1b1ddc85ce5.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nUsing CLion with Nix\nnix-cmake\n#!/usr/bin/env python3\n\n# let's say you have a C++ project in Nix that you want to work on with CLion so that the Nix dependencies are available\n# put this script in your project directory\n# then, in Settings -\u003e Build, Execution, Deployment -\u003e Toolchains set CMake to this script\n# if you need any extra nix-shell arguments, add them to the invocation at the bottom\n\nimport os\nimport sys\nimport shlex\n\nscriptDir = os.path.dirname(os.path.realpath(__file__))\n\nargs = list(map(shlex.quote, sys.argv[1:]))\n\n# Use the cmakeFlags set by Nix - this doesn't work with --build\nif \"--build\" not in args:\n  args.insert(0, \"$cmakeFlags\")\n\ncwd = os.getcwd()\ncmd = 'cd ' + cwd + ' \u0026\u0026 cmake ' + ' '.join(args)\n\nos.chdir(scriptDir)\nos.execvp(\"nix-shell\", [\n  'nix-shell',\n  '--pure',\n  '--run', cmd\n  ])\n@l0b0\nl0b0 commented Jan 18, 2023\n\nThank you! One minor issue is replacing cwd in line 21 with shlex.quote(cwd) makes it work with spaces.\n@arabbitplays\nComment\n\nLeave a comment\nFooter\n© 2025 GitHub, Inc.\nFooter navigation\n\n    Terms\n    Privacy\n    Security\n    Status\n    Docs\n    Contact\n\n","recorded":"2025-06-25 17:35:17.770051738","filePath":"null","pinned":false},{"value":"Ubiquitous","recorded":"2025-06-25 15:58:51.192047272","filePath":"null","pinned":false},{"value":"/home/oschdi/Desktop/Archive","recorded":"2025-06-25 12:14:58.304812294","filePath":"null","pinned":false},{"value":"/home/oschdi/Resources/Second-Brain/Archive","recorded":"2025-06-25 12:14:12.234054779","filePath":"null","pinned":false},{"value":"git push --set-upstream origin Merge","recorded":"2025-06-25 11:49:03.687786715","filePath":"null","pinned":false},{"value":"file:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.10.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.11.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.15.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.17.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.18.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.21.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/03.27.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.01.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.02.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.06.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.09.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.11.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.15.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.23.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.24.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.25.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/04.27.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.04.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.06.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.11.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.24.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.29.2025.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%D4ŦDaily%20Notes/05.31.2025.md","recorded":"2025-06-25 11:42:18.591830417","filePath":"null","pinned":false},{"value":"file:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/Rap%20Lines.md","recorded":"2025-06-25 11:42:03.678040571","filePath":"null","pinned":false},{"value":"file:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Groups\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Legacy%20People%20Notes\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Ferdinand%20Schleeh.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/John%20Page.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Juliiiii.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Katharina%20Möhrle.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Katie%20Frey.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Markus%20Flaschenträger.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%E6%D1People/Paul%20Link.md","recorded":"2025-06-25 11:41:31.218338533","filePath":"null","pinned":false},{"value":"file:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%A3Lists/Bucket%20List.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%A3Lists/Content.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%A3Lists/Learning%20Ressources.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%A3Lists/Possible%20Projects.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%A3Lists/Stuff%202%20buy.md","recorded":"2025-06-25 11:40:31.664290520","filePath":"null","pinned":false},{"value":"file:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/Effective%20Modern%20C++.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/Eine%20kurze%20Geschichte%20der%20Menschheit.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/FoF.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/Moonwalking%20with%20Einstein.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/So%20bin%20ich%20eben!.md\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources/%AD%83%F4%FBBooks/What%20I%20think%20about%20when%20I%20edit.md","recorded":"2025-06-25 11:40:11.932876104","filePath":"null","pinned":false},{"value":"📷 42802-759610919.png","recorded":"2025-06-25 11:29:41.774972256","filePath":"/home/oschdi/.config/clipse/tmp_files/42802-759610919.png","pinned":false},{"value":"📷 46597-899649604.png","recorded":"2025-06-25 11:19:26.913921338","filePath":"/home/oschdi/.config/clipse/tmp_files/46597-899649604.png","pinned":false},{"value":"git@github.com:arabbitplays/Zettelkasten.git","recorded":"2025-06-25 10:52:15.269557053","filePath":"null","pinned":false},{"value":"    qalculate-qt\n","recorded":"2025-06-24 22:50:53.849357753","filePath":"null","pinned":false},{"value":"journalctl --user -t onedrive | less","recorded":"2025-06-24 22:49:35.895697266","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/Second Brain-old/Archive\n/home/oschdi/Downloads/Second Brain-old/Projects\n/home/oschdi/Downloads/Second Brain-old/Remote Zettelkasten\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%AC%C9Areas\nfile:///home/oschdi/Downloads/Second%20Brain-old/%AD%83%C6%EDResources","recorded":"2025-06-24 14:00:21.723811720","filePath":"null","pinned":false},{"value":"📷 23809-446409503.png","recorded":"2025-06-24 10:47:31.453614375","filePath":"/home/oschdi/.config/clipse/tmp_files/23809-446409503.png","pinned":false},{"value":"📷 21482-171601014.png","recorded":"2025-06-24 10:30:59.181249403","filePath":"/home/oschdi/.config/clipse/tmp_files/21482-171601014.png","pinned":false},{"value":"participant-oriented ","recorded":"2025-06-23 14:17:02.435988440","filePath":"null","pinned":false},{"value":"These stages are not merely linear steps","recorded":"2025-06-23 14:15:46.878187352","filePath":"null","pinned":false},{"value":"I find it questionable whether one should refer to such a formal categorization here. You could also quote indirectly with “increases different type of conflict, regarding...” and then give concrete examples from the categories. Because this way it's just an unexplained technical term drop without being able to imagine what the types are (but myb it's trivial)","recorded":"2025-06-23 13:43:37.416926675","filePath":"null","pinned":false},{"value":"Finde das fragwürdig ob man sich hier auf so ne formale Kategorisierung beziehen sollte. Man könnte auch indirekt zitieren mit \"increases different type of conflict, regarding...\" und dann konkrete Beispiele aus den Kategorien. Weil so is es halt ein unerklärter Fachbegriff Drop ohne dass man sich gut was unter den Types vorstellen kann (aber myb is das trivial)","recorded":"2025-06-23 13:43:05.686183665","filePath":"null","pinned":false},{"value":"/home/oschdi/OneDrive/Sync/startup_sync.sh","recorded":"2025-06-23 12:35:03.444770396","filePath":"null","pinned":false},{"value":"movewindow","recorded":"2025-06-23 12:20:34.646206648","filePath":"null","pinned":false},{"value":"movefocus","recorded":"2025-06-23 12:20:16.013587154","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\n\ngit clone --bare git@github.com:arabbitplays/Dotfiles.git $HOME/.cfg\nfunction config {\n    git --git-dir=$HOME/.cfg/ --work-tree=$HOME $@\n}\nmkdir -p .config-backup\nconfig checkout\nif [ $? = 0 ]; then\n    echo \"Checked out config.\"\n    else\n        echo \"Backing up pre-existing dot files.\";\n        config checkout 2\u003e\u00261 | grep -E \"\\s+\\.\" | awk '{print $1}' | while read -r file; do\n            if [ -f \"$file\" ] || [ -d \"$file\" ]; then\n                # Create parent directory for the backup file, if it doesn't exist\n                mkdir -p \"$(dirname \".config-backup/$file\")\"\n                mv \"$file\" \".config-backup/$file\"\n            fi\n        done\nfi;\nconfig checkout\nconfig config status.showUntrackedFiles no","recorded":"2025-06-23 12:03:09.383611955","filePath":"null","pinned":false},{"value":"https://www.atlassian.com/git/tutorials/dotfiles","recorded":"2025-06-23 12:01:21.662167691","filePath":"null","pinned":false},{"value":"            pavucontrol\n","recorded":"2025-06-23 11:59:20.305379404","filePath":"null","pinned":false},{"value":"pavucontrol","recorded":"2025-06-23 11:59:01.622485349","filePath":"null","pinned":false},{"value":"qalculate-qt","recorded":"2025-06-22 19:44:07.395992313","filePath":"null","pinned":false},{"value":"systemctl --user status onedrive","recorded":"2025-06-20 14:40:00.533970421","filePath":"null","pinned":false},{"value":"systemctl --user enable onedrive","recorded":"2025-06-20 14:39:19.813272227","filePath":"null","pinned":false},{"value":"https://login.microsoftonline.com/common/oauth2/nativeclient?code=M.C543_BAY.2.U.6ab9f874-4d34-673a-049a-34e927b0b87b","recorded":"2025-06-20 14:38:42.742553549","filePath":"null","pinned":false},{"value":"252875","recorded":"2025-06-20 14:38:38.033445602","filePath":"null","pinned":false},{"value":"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=d50ca740-c83f-4d1b-b616-12c519384f0c\u0026scope=Files.ReadWrite%20Files.ReadWrite.All%20Sites.ReadWrite.All%20offline_access\u0026response_type=code\u0026prompt=login\u0026redirect_uri=https://login.microsoftonline.com/common/oauth2/nativeclient","recorded":"2025-06-20 14:37:57.416752034","filePath":"null","pinned":false},{"value":"services.onedrive.enable = true;","recorded":"2025-06-20 14:36:17.691895533","filePath":"null","pinned":false},{"value":"config config --local status.showUntrackedFiles no","recorded":"2025-06-20 10:32:43.026033832","filePath":"null","pinned":false},{"value":"alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'","recorded":"2025-06-20 10:31:58.802413201","filePath":"null","pinned":false},{"value":"git init --bare $HOME/.cfg","recorded":"2025-06-20 10:31:06.351462133","filePath":"null","pinned":false},{"value":"102162","recorded":"2025-06-20 09:55:42.292315634","filePath":"null","pinned":false},{"value":"GLVQ9L","recorded":"2025-06-20 09:31:41.812042968","filePath":"null","pinned":false},{"value":"$mainMod SHIFT","recorded":"2025-06-19 14:15:46.639801647","filePath":"null","pinned":false},{"value":"SUPER_SHIFT","recorded":"2025-06-19 14:13:01.034907977","filePath":"null","pinned":false},{"value":"bind = $mainMod, left, movewindow, l\nbind = $mainMod, right, movewindow, r\nbind = $mainMod, up, movewindow, u\nbind = $mainMod, down, movewindow, d","recorded":"2025-06-19 14:11:45.797587558","filePath":"null","pinned":false},{"value":"{\n  description = \"A Nix-flake-based development environment\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/nixos-25.05\";\n  };\n\n  outputs = { self , nixpkgs ,... }: let\n    # system should match the system you are running on\n    system = \"x86_64-linux\";\n  in {\n    devShells.\"${system}\".default = let\n      pkgs = import nixpkgs {\n        inherit system;\n      };\n    in pkgs.mkShell {\n      packages = with pkgs; [\n        cmake\n        ninja\n        glslang # or shaderc\n      ];\n\n      buildInputs = with pkgs; [\n        mesa # open gl\n        libGL # compatibility\n        libGLU\n        pkg-config # helps cmake find dlibs\n        glfw\n        xorg.libX11\n        xorg.libXext        \n        xorg.libXrandr      \n        xorg.libXcursor     \n        xorg.libXrender     \n        xorg.libXi  \n        xorg.libXinerama \n      ];\n\n      shellHook = ''\n        echo \"Entered dev env\"\n        export LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";\n      '';\n    };\n  };\n}","recorded":"2025-06-19 13:21:48.761920549","filePath":"null","pinned":false},{"value":"git push --set-upstream origin Assignment3","recorded":"2025-06-19 13:19:23.342313730","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/framework/data\n/home/oschdi/Downloads/framework/glf\n/home/oschdi/Downloads/framework/CMakeLists.txt","recorded":"2025-06-19 13:17:41.948099055","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Realtime-Computergraphics/Assignment3","recorded":"2025-06-19 13:09:19.387635025","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/Assignment3","recorded":"2025-06-19 13:08:56.094760481","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/flake.nix","recorded":"2025-06-19 13:03:46.439135450","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Realtime-Computergraphics/flake.nix","recorded":"2025-06-19 13:02:58.144738438","filePath":"null","pinned":false},{"value":"git reset --hard HEAD","recorded":"2025-06-19 13:02:32.096408251","filePath":"null","pinned":false},{"value":"/home/oschdi/Projects/Vulkan-Raytracing/flake.nix","recorded":"2025-06-19 13:01:20.521455638","filePath":"null","pinned":false},{"value":"\tint err=0;\n\tchar msg[256];\n\twhile( (err=glGetError())!=0 )\n\t{\n\t\tsprintf(msg, \"GL_ERROR=0x%x\\n\", err);\n\t\t#ifdef ANT_WINDOWS\n\t\t\tOutputDebugString(msg);\n\t\t#endif\n\t\tfprintf(stderr, msg);\n\t}","recorded":"2025-06-19 13:00:04.471349433","filePath":"null","pinned":false},{"value":"CMake Error at glf/CMakeLists.txt:32 (target_link_libraries):\n  Target \"GLF\" links to:\n\n    OpenGL::GLU","recorded":"2025-06-19 12:56:16.705116683","filePath":"null","pinned":false},{"value":"xorg.libXinerama","recorded":"2025-06-19 12:54:48.853222901","filePath":"null","pinned":false},{"value":"Xinerama","recorded":"2025-06-19 12:54:25.938452240","filePath":"null","pinned":false},{"value":"    pkgs.xorg.libXext        # sometimes needed\n    pkgs.xorg.libXrandr      # for window resizing (optional)\n    pkgs.xorg.libXcursor     # optional: cursor support\n    pkgs.xorg.libXrender     # optional: rendering\n    pkgs.xorg.libXi   ","recorded":"2025-06-19 12:49:01.911423700","filePath":"null","pinned":false},{"value":"Could NOT find X11 (missing: X11_X11_INCLUDE_PATH X11_X11_LIB)","recorded":"2025-06-19 12:45:17.047037558","filePath":"null","pinned":false},{"value":"pkgs.pkg-config","recorded":"2025-06-19 12:43:26.463049536","filePath":"null","pinned":false},{"value":"ould NOT find OpenGL (missing: OPENGL_opengl_LIBRARY OPENGL_glx_LIBRARY\n  OPENGL_INCLUDE_DIR)","recorded":"2025-06-19 12:42:48.912937152","filePath":"null","pinned":false},{"value":"      LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";\n","recorded":"2025-06-19 12:41:35.031705050","filePath":"null","pinned":false},{"value":"LD_LIBRARY_PATH=\"/run/opengl-driver/lib:/run/opengl-driver-32/lib\";","recorded":"2025-06-19 12:40:26.471221576","filePath":"null","pinned":false},{"value":"/home/oschdi/Downloads/framework/Assignments\n/home/oschdi/Downloads/framework/data\n/home/oschdi/Downloads/framework/glf\n/home/oschdi/Downloads/framework/CMakeLists.txt","recorded":"2025-06-18 17:38:17.601107424","filePath":"null","pinned":false},{"value":"git@github.com:arabbitplays/Realtime-Computergraphics.git","recorded":"2025-06-18 17:28:55.620193000","filePath":"null","pinned":false},{"value":"kitty --class clipse -e clipse","recorded":"2025-06-18 16:43:11.995052062","filePath":"null","pinned":false},{"value":"working","recorded":"2025-06-18 16:42:55.957823663","filePath":"null","pinned":false},{"value":"Diversity management","recorded":"2025-06-18 16:42:45.708735404","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Requirements: wl-clipboard, wtype\n\n# Save current clipboard\nOLD_CLIP=$(wl-paste)\n\n# Launch Clipse and wait for it to exit\nclipse\n\n# Give it a short moment to update clipboard\nsleep 0.3\n\n# Get the new clipboard content\nNEW_CLIP=$(wl-paste)\n\n# Compare and type if changed\nif [[ \"$NEW_CLIP\" != \"$OLD_CLIP\" \u0026\u0026 -n \"$NEW_CLIP\" ]]; then\n    wtype --delay 5 \"$NEW_CLIP\"\nfi\n","recorded":"2025-06-18 16:42:01.242758885","filePath":"null","pinned":false},{"value":"scrutinized","recorded":"2025-06-18 16:27:31.467932178","filePath":"null","pinned":false},{"value":"performative diversity","recorded":"2025-06-18 16:27:05.255197383","filePath":"null","pinned":false},{"value":"têtu•connec","recorded":"2025-06-18 13:08:47.626898550","filePath":"null","pinned":false},{"value":"session","recorded":"2025-06-18 13:01:36.546591932","filePath":"null","pinned":false},{"value":"everywhere, „wo sich Menschen im Dialog begegnen“ (p. 4), so also in working life, in social contexts or through media. ","recorded":"2025-06-18 10:09:13.137843606","filePath":"null","pinned":false},{"value":" I view this ","recorded":"2025-06-18 10:02:21.954159003","filePath":"null","pinned":false},{"value":"While the concept of diversity is widely accepted today, its implementation in companies often remains superficial, limited to symbolic gestures like a “rainbow flag in the company logo”, instead of being embedded in systemic change","recorded":"2025-06-18 09:47:46.933684033","filePath":"null","pinned":false}]}